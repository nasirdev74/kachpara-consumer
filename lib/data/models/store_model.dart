import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:kachpara/domain/entities/store.dart';

part 'store_model.freezed.dart';

part 'store_model.g.dart';

@freezed
class StoreModel with _$StoreModel {
  StoreModel._();

  factory StoreModel({
    required String id,
    bool? kachparaEnabled,
    bool? orderEnabled,
    // int? businessTypeId,
    // int? marketplaceId,
    // String? createdAt,
    // String? updatedAt,
    required String currency,
    required String currencySymbol,
    int? firstPurchaseReward,
    int? addStoreReward,
    // int? deliveryTimeHours,
    // int? deliveryTimeMinutes,
    String? facebook,
    // String? instagram,
    String? twitter,
    String? whatsapp,
    bool? isRewardEnabled,
    bool? isLoyaltyEnabled,
    bool? isCompetitionEnabled,
    String? youtube,
    // String? location,
    required String name,
    required String referralCode,
    required String storeUrl,
    String? googleMapsUrl,
    String? imageFileName,
    // String? phone,
    // int? userId,
    // int? resellerUserId,
    // String? subDomain,
    // String? logoFileName,
    // String? logoContentType,
    // int? logoFileSize,
    // String? logoUpdatedAt,
    // String? deliveryLong,
    // String? deliveryLongType,
    // bool? nextDayOnly,
    // int? orderAheadDaysLimit,
    // int? foodPreparationTime,
    // bool? taxEnable,
    // double? taxValue,
    // bool? tipEnable,
    // String? tip,
    String? lat,
    String? lng,
    // double? deliveryFee,
    // int? deliveryTime,
    required String address,
    String? placeId,
    @Default(100) int visitsRewardTreshold,
    String? visitsRewardDescription,
    String? visitsRewardEarnedDescription,
    @Default([]) List<String> adminUserIds,
  }) = _Store;

  factory StoreModel.fromJson(Map<String, dynamic> json) => _$StoreModelFromJson(json);

  Store toDomain() {
    return Store(
        id: id,
        kachparaEnabled: kachparaEnabled,
        orderEnabled: orderEnabled,
        // businessTypeId: businessTypeId,
        // marketplaceId: marketplaceId,
        // createdAt: createdAt,
        // updatedAt: updatedAt,
        currency: currency,
        currencySymbol: currencySymbol,
        firstPurchaseReward: firstPurchaseReward,
        addStoreReward: addStoreReward,
        // deliveryTimeHours: deliveryTimeHours,
        // deliveryTimeMinutes: deliveryTimeMinutes,
        facebookUrl: facebook,
        // instagramUrl: instagram,
        twitterUrl: twitter,
        whatsapp: whatsapp,
        isRewardEnabled: isRewardEnabled,
        isLoyaltyEnabled: isLoyaltyEnabled,
        isCompetitionEnabled: isCompetitionEnabled,
        youtubeUrl: youtube,
        name: name,
        referralCode: referralCode,
        storeUrl: storeUrl,
        googleMapsUrl: googleMapsUrl,
        imageFileName: imageFileName,
        // phone: phone,
        // userId: userId,
        // resellerUserId: resellerUserId,
        // subDomain: subDomain,
        // logoFileName: logoFileName,
        // logoContentType: logoContentType,
        // logoFileSize: logoFileSize,
        // logoUpdatedAt: logoUpdatedAt,
        // deliveryLong: deliveryLong,
        // deliveryLongType: deliveryLongType,
        // nextDayOnly: nextDayOnly,
        // orderAheadDaysLimit: orderAheadDaysLimit,
        // foodPreparationTime: foodPreparationTime,
        // taxEnable: taxEnable,
        // taxValue: taxValue,
        // tipEnable: tipEnable,
        // tip: tip,
        lat: lat,
        lng: lng,
        // deliveryFee: deliveryFee,
        // deliveryTime: deliveryTime,
        address: address,
        placeId: placeId,
        visitsRewardTreshold: visitsRewardTreshold,
        visitsRewardDescription: visitsRewardDescription,
        visitsRewardEarnedDescription: visitsRewardEarnedDescription,
        adminUserIds: adminUserIds);
  }

  factory StoreModel.fromDomain(Store store) => StoreModel(
        id: store.id,
        kachparaEnabled: store.kachparaEnabled,
        orderEnabled: store.orderEnabled,
        name: store.name,
        referralCode: store.referralCode,
        // businessTypeId: store.businessTypeId,
        // marketplaceId: store.marketplaceId,
        // createdAt: store.createdAt,
        // updatedAt: store.updatedAt,
        currency: store.currency,
        currencySymbol: store.currencySymbol,
        firstPurchaseReward: store.firstPurchaseReward,
        addStoreReward: store.addStoreReward,
        storeUrl: store.storeUrl,
        googleMapsUrl: store.googleMapsUrl,
        imageFileName: store.imageFileName,
        // deliveryTimeHours: store.deliveryTimeHours,
        // deliveryTimeMinutes: store.deliveryTimeMinutes,
        facebook: store.facebookUrl,
        // instagram: store.instagramUrl,
        twitter: store.twitterUrl,
        whatsapp: store.whatsapp,
        isRewardEnabled: store.isRewardEnabled,
        isLoyaltyEnabled: store.isLoyaltyEnabled,
        isCompetitionEnabled: store.isCompetitionEnabled,
        youtube: store.youtubeUrl,
        // phone: store.phone,
        // userId: store.userId,
        // resellerUserId: store.resellerUserId,
        // subDomain: store.subDomain,
        // logoFileName: store.logoFileName,
        // logoContentType: store.logoContentType,
        // logoFileSize: store.logoFileSize,
        // logoUpdatedAt: store.logoUpdatedAt,
        // deliveryLong: store.deliveryLong,
        // deliveryLongType: store.deliveryLongType,
        // nextDayOnly: store.nextDayOnly,
        // orderAheadDaysLimit: store.orderAheadDaysLimit,
        // foodPreparationTime: store.foodPreparationTime,
        // taxEnable: store.taxEnable,
        // taxValue: store.taxValue,
        // tipEnable: store.tipEnable,
        // tip: store.tip,
        lat: store.lat,
        lng: store.lng,
        // deliveryFee: store.deliveryFee,
        // deliveryTime: store.deliveryTime,
        address: store.address,
        placeId: store.placeId,
        visitsRewardTreshold: store.visitsRewardTreshold,
        visitsRewardDescription: store.visitsRewardDescription,
        visitsRewardEarnedDescription: store.visitsRewardEarnedDescription,
        adminUserIds: store.adminUserIds,
      );
}
